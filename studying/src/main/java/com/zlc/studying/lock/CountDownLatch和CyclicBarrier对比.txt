个人理解:
    从字面上理解，CountDown表示减法计数，Latch表示门闩的意思，计数为0的时候就可以打开门闩了。Cyclic Barrier表示循环的障碍物。
    两个类都含有这一个意思：对应的线程都完成工作之后再进行下一步动作，也就是大家都准备好之后再进行下一步。然而两者最大的区别是，
    进行下一步动作的动作实施者是不一样的。这里的"动作实施者"有两种，一种是主线程（即执行main函数），另一种是执行任务的其他线程，
    后面叫这种线程为"其他线程"，区分于主线程。对于CountDownLatch，当计数为0的时候，下一步的动作实施者是main函数；对于CyclicBarrier，
    下一步动作实施者是"其他线程"。
    举例:
        CountDownLatch:
            英雄联盟, 主线程为控制游戏开始的线程, 其他线程是5个玩家, 5个玩家都准备好, 主线程游戏开始;
        CyclicBarrier:
            5个人翻越3道障碍物, 要求所有人翻越当前障碍物后才能翻越下一个障碍物, 所有人都翻越3道后, 主线程可能早就结束了;


CyclicBarrier和CountDownLatch有什么区别

    1) 从使用场景上来说CyclicBarrier适用于一组线程同时执行,而CountDownLatch执行的时候是一个个线程执行的。

    2) 从功能上来说CyclicBarrier可以实现计数的复用而CountDownLatch不能。CyclicBarrier可以实现一组线程同一时间同时执行而CountDownLatch不能,
    CountDownLatch只能实现基于线程A等待若干线程执行完之后,它才能执行。

    3) 从实现方式来说CountDownLatch是基于AQS的共享锁模式实现,CyclicBarrier是基于ReentrantLock和Condition实现，ReentrantLock的lock方法
    又是基于AQS的独占锁模式实现,Condition也是用的AQS中的ConditionObject来实现。

