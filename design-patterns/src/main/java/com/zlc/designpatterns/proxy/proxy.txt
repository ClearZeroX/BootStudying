一、静态代理 com.zlc.designpatterns.proxy.staticProxy
    优点:
        在不修改目标对象的前提下, 对目标功能进行扩展
    缺点:
        因为代理对象需要与目标对象实现一样的接口,所以会有很多代理类,类太多. 同时,一旦接口增加方法,目标对象与代理对象都要维护.

二、动态代理 com.zlc.designpatterns.proxy.jdkProxy
    1、目标对象实现接口, 代理对象不需要实现接口
    2、代理对象的生成, 是利用jdk的API, 动态的在内存中构建代理对象(需要我们指定创建代理对象/目标对象实现的接口的类型)
    3、动态代理也叫做:JDK代理,接口代理

    代理类所在包:
        java.lang.reflect.Proxy
        执行Proxy.newProxyInstance获取代理对象
            public static Object newProxyInstance(ClassLoader loader, Class<?>[] interfaces, InvocationHandler h)